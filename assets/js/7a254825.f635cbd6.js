"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[901],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4387:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],o={sidebar_position:40,title:"State Outline"},u="State Outline",s={unversionedId:"state-outline",id:"state-outline",title:"State Outline",description:"This project uses Rodux, a library for centralizing game state. The store state matches the following structure:",source:"@site/docs/state-outline.md",sourceDirName:".",slug:"/state-outline",permalink:"/pounce/docs/state-outline",draft:!1,tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40,title:"State Outline"},sidebar:"tutorialSidebar",previous:{title:"Project Outline",permalink:"/pounce/docs/project-outline"},next:{title:"Docs Development Setup",permalink:"/pounce/docs/docs-setup"}},c={},p=[{value:"Player Ids",id:"player-ids",level:2},{value:"Card Signatures",id:"card-signatures",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"state-outline"},"State Outline"),(0,i.kt)("p",null,"This project uses Rodux, a library for centralizing game state. The store state matches the following structure:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'local state = {\n    activeMatches = {\n        ["GUID"] = {\n            players = {\n                ["id1"] = {\n                    stack = { -- column the player needs to empty to win\n                        "A2",\n                        "A10",\n                        "D4",\n                        "D1"\n                    },\n                    pad = { -- AKA columns\n                        [1] = {\n                            "A13",\n                            "D12",\n                            "C11",\n                            "D10",\n                            "C9",\n                            "B8",\n                        }\n                    },\n                    deck = {\n                        "A2",\n                        "A10",\n                        "D4",\n                        "D1",\n                    };\n                    deckPosition = 28,\n                    pounced = false,\n                    quit = false,\n                }\n            },\n            field = { -- AKA piles\n                ["GUID"] = {\n                    cards = {\n                        [1] = {\n                            playerId = "id1",\n                            signature = "A1"\n                        };\n                        [2] = {\n                            playerId = "id2",\n                            signature = "A2"\n                        };\n                        [3] = {\n                            playerId = "id1",\n                            signature = "A3"\n                        };\n                    },\n                    position = UDim2.new(),\n                }\n            }\n        }\n    };\n    selection = { -- can be nil. client-exclusive.\n        origin = Enums.CardOrigin.Column;\n        column = 4; --optional\n        index = 2; --optional\n    }\n}\n')),(0,i.kt)("h2",{id:"player-ids"},"Player Ids"),(0,i.kt)("p",null,"Player Ids are ",(0,i.kt)("inlineCode",{parentName:"p"},"UserId"),"s converted to strings. This is done because using numbers as non-sequential keys is a nightmare for replication and iteration in general."),(0,i.kt)("h2",{id:"card-signatures"},"Card Signatures"),(0,i.kt)("p",null,"Card signatures are short strings consisting of a card's suit and value combined together. Suits are single characters, and values are numbers."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Suit"),(0,i.kt)("th",{parentName:"tr",align:null},"Value"),(0,i.kt)("th",{parentName:"tr",align:null},"Signature"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"A"),(0,i.kt)("td",{parentName:"tr",align:null},"Q"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"A12"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"D"),(0,i.kt)("td",{parentName:"tr",align:null},"4"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"D4"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"C"),(0,i.kt)("td",{parentName:"tr",align:null},"1"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"C1"'))))))}m.isMDXComponent=!0}}]);