"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[237],{3905:function(e,t,l){l.d(t,{Zo:function(){return u},kt:function(){return h}});var n=l(7294);function o(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function i(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?i(Object(l),!0).forEach((function(t){o(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):i(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function a(e,t){if(null==e)return{};var l,n,o=function(e,t){if(null==e)return{};var l,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)l=i[n],t.indexOf(l)>=0||(o[l]=e[l]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)l=i[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(o[l]=e[l])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),l=t;return e&&(l="function"==typeof e?e(t):r(r({},t),e)),l},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var l=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(l),h=o,v=p["".concat(s,".").concat(h)]||p[h]||d[h]||i;return l?n.createElement(v,r(r({ref:t},u),{},{components:l})):n.createElement(v,r({ref:t},u))}));function h(e,t){var l=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=l.length,r=new Array(i);r[0]=p;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,r[1]=a;for(var c=2;c<i;c++)r[c]=l[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,l)}p.displayName="MDXCreateElement"},2026:function(e,t,l){l.r(t),l.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return d}});var n=l(7462),o=l(3366),i=(l(7294),l(3905)),r=["components"],a={sidebar_position:2,title:"Project Outline"},s="Project Outline",c={unversionedId:"project-outline",id:"project-outline",title:"Project Outline",description:"This is a brief overview of the various files and folders in the project and the purposes they serve.",source:"@site/docs/project-outline.md",sourceDirName:".",slug:"/project-outline",permalink:"/pounce/docs/project-outline",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Project Outline"},sidebar:"tutorialSidebar",previous:{title:"Development Setup",permalink:"/pounce/docs/dev-setup"},next:{title:"State Outline",permalink:"/pounce/docs/state-outline"}},u={},d=[{value:".github/workflows",id:"githubworkflows",level:2},{value:"docs",id:"docs",level:2},{value:"docs",id:"docs-1",level:3},{value:"src",id:"src",level:3},{value:"static",id:"static",level:3},{value:"src",id:"src-1",level:2},{value:"client",id:"client",level:3},{value:"server",id:"server",level:3},{value:"Actions",id:"actions",level:4},{value:"Modules",id:"modules",level:4},{value:"shared",id:"shared",level:3},{value:"Actions",id:"actions-1",level:4},{value:"Checks",id:"checks",level:4},{value:"Components",id:"components",level:4},{value:"Constants",id:"constants",level:4},{value:"Modules",id:"modules-1",level:4},{value:"Reducers",id:"reducers",level:4},{value:"Selectors",id:"selectors",level:4},{value:"Utilities",id:"utilities",level:4},{value:".gitignore",id:"gitignore",level:2},{value:"LICENSE",id:"license",level:2},{value:"README.md",id:"readmemd",level:2},{value:"TestExecution.lua",id:"testexecutionlua",level:2},{value:"client.ovpn",id:"clientovpn",level:2},{value:"default.project.json",id:"defaultprojectjson",level:2},{value:"foreman.toml",id:"foremantoml",level:2},{value:"selene.toml",id:"selenetoml",level:2},{value:"testez.toml",id:"testeztoml",level:2},{value:"wally.exe",id:"wallyexe",level:2},{value:"wally.lock",id:"wallylock",level:2},{value:"wally.toml",id:"wallytoml",level:2}],p={toc:d};function h(e){var t=e.components,l=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,n.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"project-outline"},"Project Outline"),(0,i.kt)("p",null,"This is a brief overview of the various files and folders in the project and the purposes they serve."),(0,i.kt)("h2",{id:"githubworkflows"},".github/workflows"),(0,i.kt)("p",null,"This folder holds any workflow scripts that run when changes are pushed to GitHub."),(0,i.kt)("h2",{id:"docs"},"docs"),(0,i.kt)("p",null,"This is the root of the documentation site."),(0,i.kt)("h3",{id:"docs-1"},"docs"),(0,i.kt)("p",null,"The folder of markdown files that are turned into the doc site."),(0,i.kt)("h3",{id:"src"},"src"),(0,i.kt)("p",null,"Scripts and components used by the doc site."),(0,i.kt)("h3",{id:"static"},"static"),(0,i.kt)("p",null,"A folder containing public assets used by the docs."),(0,i.kt)("h2",{id:"src-1"},"src"),(0,i.kt)("p",null,"This is the codebase of the game."),(0,i.kt)("h3",{id:"client"},"client"),(0,i.kt)("p",null,"This contains scripts that get placed into ",(0,i.kt)("inlineCode",{parentName:"p"},"StarterPlayer.StarterPlayerScripts"),"."),(0,i.kt)("h3",{id:"server"},"server"),(0,i.kt)("p",null,"This contains scripts that get placed into ",(0,i.kt)("inlineCode",{parentName:"p"},"ServerScriptService")," and are hidden from the client."),(0,i.kt)("h4",{id:"actions"},"Actions"),(0,i.kt)("p",null,"Server-exclusive actions that can be dispatched to the Rodux store."),(0,i.kt)("h4",{id:"modules"},"Modules"),(0,i.kt)("p",null,"Systems that run game logic not driven by player input."),(0,i.kt)("h3",{id:"shared"},"shared"),(0,i.kt)("p",null,"This contains modules that get placed into ",(0,i.kt)("inlineCode",{parentName:"p"},"ReplicatedStorage")," and can be used by both the server and the client."),(0,i.kt)("h4",{id:"actions-1"},"Actions"),(0,i.kt)("p",null,"Shared actions that can be dispatched on the server, replicating to clients, or dispatched on the client, not replicating anywhere else."),(0,i.kt)("h4",{id:"checks"},"Checks"),(0,i.kt)("p",null,"Contains checks that verify if a remote call has provided valid input."),(0,i.kt)("h4",{id:"components"},"Components"),(0,i.kt)("p",null,"Roact components used to build the UI."),(0,i.kt)("h4",{id:"constants"},"Constants"),(0,i.kt)("p",null,"Unchanging values centralized into one easy-to-modify location."),(0,i.kt)("h4",{id:"modules-1"},"Modules"),(0,i.kt)("p",null,"Stateful modules with side effects that the client needs to be able to interact with."),(0,i.kt)("h4",{id:"reducers"},"Reducers"),(0,i.kt)("p",null,"A tree of modules that describe how to modify the state of the Rodux store when actions are dispatched."),(0,i.kt)("h4",{id:"selectors"},"Selectors"),(0,i.kt)("p",null,"Helper functions for rapidly grabbing info from the Rodux store."),(0,i.kt)("h4",{id:"utilities"},"Utilities"),(0,i.kt)("p",null,"Stateless functions that are used across the game."),(0,i.kt)("h2",{id:"gitignore"},".gitignore"),(0,i.kt)("p",null,"A list of files and directories that shouldn't be synced to GitHub."),(0,i.kt)("h2",{id:"license"},"LICENSE"),(0,i.kt)("p",null,"This project is open-sourced under the MPL-2.0 license."),(0,i.kt)("h2",{id:"readmemd"},"README.md"),(0,i.kt)("p",null,"An introduction to this project."),(0,i.kt)("h2",{id:"testexecutionlua"},"TestExecution.lua"),(0,i.kt)("p",null,"A script used by the automated testing workflow to run the testing suite. This can also be pasted into the Studio command bar to run the test suite without pushing."),(0,i.kt)("h2",{id:"clientovpn"},"client.ovpn"),(0,i.kt)("p",null,"Used by the automated testing workflow to VPN into a static IP address with a valid authentication token to install and open Studio."),(0,i.kt)("h2",{id:"defaultprojectjson"},"default.project.json"),(0,i.kt)("p",null,"Describes to Rojo how a Roblox place should be built from the file tree."),(0,i.kt)("h2",{id:"foremantoml"},"foreman.toml"),(0,i.kt)("p",null,"A list of tools that Foreman should automatically install."),(0,i.kt)("h2",{id:"selenetoml"},"selene.toml"),(0,i.kt)("p",null,"Tells the linter which additional config files to look for."),(0,i.kt)("h2",{id:"testeztoml"},"testez.toml"),(0,i.kt)("p",null,"Linting rules related to the TestEZ testing library."),(0,i.kt)("h2",{id:"wallyexe"},"wally.exe"),(0,i.kt)("p",null,"A custom build of Wally that is temporarily in place until dev dependencies are fixed. Use this with ",(0,i.kt)("inlineCode",{parentName:"p"},"./wally")," anywhere you would normally use ",(0,i.kt)("inlineCode",{parentName:"p"},"wally"),"."),(0,i.kt)("h2",{id:"wallylock"},"wally.lock"),(0,i.kt)("p",null,"A lockfile that determines exactly which packages should be installed by Wally."),(0,i.kt)("h2",{id:"wallytoml"},"wally.toml"),(0,i.kt)("p",null,"A list of dependencies that need to be downloaded before the project can run."))}h.isMDXComponent=!0}}]);